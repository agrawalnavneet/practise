//optimal sol

class Solution {
    public int minMaxDifference(int num) {
        String s = String.valueOf(num);
        StringBuilder ma = new StringBuilder();
        StringBuilder mi = new StringBuilder();
        int n = s.length();
        char ele = ' ';

        // Find first digit that is not '9' for max conversion
        for (int i = 0; i < n; i++) {
            if (s.charAt(i) != '9') {
                ele = s.charAt(i);
                break;
            }
        }

        // Build max string
        for (int i = 0; i < n; i++) {
            if (s.charAt(i) == ele) {
                ma.append('9');
            } else {
                ma.append(s.charAt(i));
            }
        }

        // Build min string by replacing all occurrences of first digit with '0'
        char firstDigit = s.charAt(0);
        for (int i = 0; i < n; i++) {
            if (s.charAt(i) == firstDigit) {
                mi.append('0');
            } else {
                mi.append(s.charAt(i));
            }
        }
        return Integer.parseInt(ma.toString()) - Integer.parseInt(mi.toString());
    }
}
