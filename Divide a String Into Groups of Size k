Input: s = "abcdefghi", k = 3, fill = "x"
Output: ["abc","def","ghi"]
Explanation:
The first 3 characters "abc" form the first group.
The next 3 characters "def" form the second group.
The last 3 characters "ghi" form the third group.
Since all groups can be completely filled by characters from the string, we do not need to use fill.
Thus, the groups formed are "abc", "def", and "ghi".



class Solution {
    public String[] divideString(String s, int k, char fill) {
        int n = s.length();
        int parts = (n + k - 1) / k; 
        String[] ans = new String[parts];

        for (int i = 0; i < parts; i++) {
            int start = i * k;
            
            int end = Math.min(start + k, n);
            String part = s.substring(start, end);

            while (part.length() < k) {
                part += fill;
            }

            ans[i] = part;
        }

        return ans;
    }
}





    
